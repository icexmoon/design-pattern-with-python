#######################################################
#
# Raspberry.py
# Python implementation of the Class Raspberry
# Generated by Enterprise Architect
# Created on:      01-7ï¿½ï¿½-2021 11:07:50
# Original author: 70748
#
#######################################################
from .Kodi import Kodi


class Raspberry:
    def __init__(self) -> None:
        self.__services = dict()

    def exec(self, serviceName: str, command: str):
        print("exec {} {}".format(serviceName, command))
        if serviceName in self.__services:
            service = self.__services[serviceName]
            if hasattr(service, command):
                recretCommand = getattr(service, command)
                if callable(recretCommand):
                    recretCommand()
                

    def shutdown(self):
        print("{!s} shutdown")

    def start(self):
        print("{!s} start")

    def startService(self, serviceName: str):
        print("start service {}".format(serviceName))
        if serviceName == "Kodi":
            kodi = Kodi()
            self.__services["Kodi"] = kodi
            kodi.start()

    def __str__(self) -> str:
        return self.__class__.__name__
